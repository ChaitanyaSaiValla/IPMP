class Solution
{
public:
    unordered_map<int, int> m;
    int idx;

    Node *solve(int in[], int pre[], int l, int r)
    {
        if (l > r)
            return NULL;
        int d = pre[idx++];
        Node *node = new Node(d);
        if (l == r)
            return node;
        int mid = m[d];
        node->left = solve(in, pre, l, mid - 1);
        node->right = solve(in, pre, mid + 1, r);
        return node;
    }

    Node *buildTree(int in[], int pre[], int n)
    {
        m.clear();
        idx = 0;
        for (int i = 0; i < n; i++)
        {
            m[in[i]] = i;
        }
        return solve(in, pre, 0, n - 1);
    }
};